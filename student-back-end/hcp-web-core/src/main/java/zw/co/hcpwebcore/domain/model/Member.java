package zw.co.hcpwebcore.domain.model;

import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;
import lombok.*;
import org.springframework.data.jpa.domain.support.AuditingEntityListener;
import zw.co.hcpwebcommons.domain.converter.EmailConverter;
import zw.co.hcpwebcommons.domain.converter.MobileNumberConverter;
import zw.co.hcpwebcommons.domain.enums.Gender;
import zw.co.hcpwebcommons.domain.enums.MaritalStatus;
import zw.co.hcpwebcommons.domain.enums.PolicyType;
import zw.co.hcpwebcommons.domain.enums.Title;
import zw.co.hcpwebcommons.domain.value.AbstractAuditingEntity;
import zw.co.hcpwebcommons.domain.value.Email;
import zw.co.hcpwebcommons.domain.value.MobileNumber;


import javax.persistence.*;
import java.time.LocalDate;

@Entity
@Table(name = "main_member",schema = "hcp_ussd")
@Getter
@Setter
@AllArgsConstructor
@NoArgsConstructor
@Builder
@ToString
@EntityListeners(AuditingEntityListener.class)
@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "id")
public class Member extends AbstractAuditingEntity {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private long id;

    private String firstName;

    private String lastName;

    @Enumerated(EnumType.STRING)
    private Gender gender;

    private LocalDate dateOfBirth;

    @Enumerated(EnumType.STRING)
    private Title title;

    @Enumerated(EnumType.STRING)
    private MaritalStatus maritalStatus;

    @Convert(converter = EmailConverter.class)
    private Email email;

    @Column(unique = true,length = 20)
    @Convert(converter = MobileNumberConverter.class)
    private MobileNumber msisdn;

    @Column(unique = true,length = 20)
//    @Convert(converter= IdNumberConverter.class)
    private String nationalId;

    @Column(unique = true,length = 50)
    private String policyNumber;    //to be generated by core system

    @Enumerated(EnumType.STRING)
    private PolicyType policyType ;

    @Column(unique = true,length = 20)
    private String reference;

    private boolean isActive;

}